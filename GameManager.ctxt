#BlueJ class context
comment0.target=GameManager
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "Westeros"\ application.\r\n\ \ "Westeros"\ is\ a\ text\ based\ adventure\ game,\ inspired\ by\ the\r\n\ \ book\ series\ 'A\ song\ of\ Ice\ and\ Fire'\ and\ television\ series\r\n\ \ 'Game\ of\ Thrones'\ written\ by\ George\ R.R\ Martin\ and\ produced\ by\ HBO.\r\n\r\n\ \ Names\ of\ some\ characters,\ locations\ and\ the\ name\ of\ the\ game\ 'Westeros'\r\n\ \ are\ inspired\ by\ 'A\ song\ of\ Ice\ and\ Fire'.\ The\ storyline\ of\ the\ game\ however,\r\n\ \ is\ my\ own\ work.\r\n\r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ NPCs,\ items;\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes\ and\ Shahmeer\ Khalid\r\n\ @version\ 2024.11.23\r\n
comment1.params=
comment1.target=GameManager()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=void\ goRoom(Command)
comment10.text=\r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ unlocked\ exit.\r\n\ If\ the\ exit\ is\ locked,\ try\ and\ unlock\ it.\r\n\ Otherwise,\ print\ an\ error\ message.\r\n\ @param\ command\ -\ contains\ the\ direction\ the\ player\ wants\ to\ go\r\n
comment11.params=nextRoom
comment11.target=boolean\ canUnlock(Room)
comment11.text=\r\n\ Check\ if\ the\ room\ can\ be\ unlocked\ by\ the\ player\ based\ on\ required\ items.\r\n\ @param\ nextRoom\ -\ the\ room\ to\ check\r\n\ @return\ true\ if\ room\ can\ be\ unlocked\r\n
comment12.params=nextRoom
comment12.target=void\ unlockRoom(Room)
comment12.text=\r\n\ Unlock\ the\ room\ and\ remove\ required\ items\ from\ players\ inventory\r\n\ Update\ the\ status\ of\ the\ room\ to\ unlocked.\r\n\ @param\ nextRoom\ -\ The\ room\ to\ unlock\r\n
comment13.params=command
comment13.target=boolean\ quit(Command)
comment13.text=\r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment14.params=command
comment14.target=void\ search(Command)
comment14.text=\r\n\ "Allows\ player\ to\ view\ items\ available\ in\ their\ inventory\ or\ room"\r\n\ @param\ command\ -\ Search\ action\r\n
comment15.params=command
comment15.target=void\ take(Command)
comment15.text=\r\n\ Take\ an\ item\ from\ the\ room\ and\ add\ it\ to\ inventory\ if\ there\ is\ space.\r\n\ If\ not,\ print\ an\ error\ message.\r\n\ @param\ command\ -\ command\ containing\ item\ to\ take\r\n
comment16.params=
comment16.target=void\ back()
comment16.text=\r\n\ Method\ allowing\ user\ to\ go\ back\ to\ the\ previous\ room\ they\ came\ from\r\n\ Utilizes\ stack\ data\ structure\ to\ store\ previously\ visited\ rooms\ in\ order.\r\n
comment17.params=command
comment17.target=void\ dropItem(Command)
comment17.text=\r\n\ Drop\ an\ item\ from\ inventory.\ Dropped\ item\ gets\ stored\ in\ room.\r\n\ format\ -\ drop\ [item\ to\ drop]\r\n\ @param\ command\ -\ Contains\ the\ name\ of\ the\ item\ to\ drop\r\n
comment18.params=command
comment18.target=void\ trade(Command)
comment18.text=\r\n\ Method\ allowing\ the\ user\ to\ trade\ items\ with\ NPC\ characters.\r\n\ Items\ that\ can\ be\ traded;\ and\ what\ they\ will\ be\ traded\ for\r\n\ can\ be\ defined\ in\ the\ Items\ class.\ This\ class\ simply\r\n\ implements\ the\ procedure\ of\ validating\ a\ trade\ and\ moving\ items\r\n\ between\ inventories.\r\n\ command\ format\ -\ trade\ [NPC\ name]\ [Item\ to\ give\ to\ npc]\r\n\ @param\ command\ -\ Contains\ the\ npc\ to\ trade\ with\ and\ the\ item\ to\ trade\r\n
comment19.params=npc
comment19.target=boolean\ npcTradeValidation(Npc)
comment19.text=\r\n\ Class\ that\ validates\ the\ npc\ during\ the\ trading\ procedure.\ It\ ensures\ that\ the\ named\r\n\ npc\ exists\ and\ is\ in\ the\ current\ room.\r\n\ @param\ npc\ -\ The\ npc\ the\ player\ wishes\ to\ trade\ with\r\n\ @return\ true\ if\ the\ npc\ exists\ and\ is\ int\ he\ player's\ room\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment20.params=
comment20.target=boolean\ winCheck()
comment20.text=\r\n\ Method\ to\ check\ if\ the\ player\ has\ won\ the\ game.\r\n\ In\ this\ game,\ the\ game\ is\ won\ if\ the\ player\ enters\ the\ 'iron\ throne'\ room.\r\n\ The\ Iron\ Throne\ room\ must\ first\ be\ unlocked\r\n\ @return\ true\ if\ player\ has\ won\ the\ game\r\n
comment3.params=
comment3.target=void\ addItems()
comment3.text=\r\n\ Method\ adds\ items\ to\ specific\ rooms.\r\n
comment4.params=
comment4.target=void\ createNpc()
comment4.text=\r\n\ Creates\ and\ initializes\ NPCs.\ Items\ are\ added\ to\ npc\ inventory\r\n
comment5.params=
comment5.target=boolean\ checkFinished()
comment5.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment6.params=
comment6.target=void\ displayNpcInfo()
comment6.text=\r\n\ Check\ if\ any\ npcs\ are\ in\ the\ current\ room\ and\ of\ so,\ display\ their\ descriptions\r\n
comment7.params=
comment7.target=java.lang.String\ getRoomLongDescription()
comment8.params=command
comment8.target=boolean\ processCommand(Command)
comment8.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment9.params=
comment9.target=void\ printHelp()
comment9.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
numComments=21
